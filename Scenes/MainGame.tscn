[gd_scene load_steps=9 format=3 uid="uid://ltohu3eso8ys"]

[ext_resource type="Texture2D" uid="uid://bklotfrytu2qf" path="res://Assets/Tileset/Dungeon_Tileset.png" id="1_6jrjb"]
[ext_resource type="PackedScene" uid="uid://bkrmd3bgycwoc" path="res://Scenes/Player.tscn" id="1_dlx83"]
[ext_resource type="Texture2D" uid="uid://cp20mp82ca7iv" path="res://Assets/Tileset/DoorsOld.png" id="2_ivbv3"]

[sub_resource type="GDScript" id="GDScript_suuod"]
script/source = "extends Node2D

class Room:
	var rect: Rect2
	var tunnels = []
	var has_tunneldirection = []

	func _init(_x, _y, _width, _height):
		rect = Rect2(_x, _y, _width, _height)

@onready var Player = $Player

@onready var Map_TileMap = $Map
@onready var Doors_TileMap = $Doors

@onready var Speaks_Paste = $Speaks


var CurrentRoom: Room = null
var Rooms = []

var Total_RoomsGenerated = 0
var Max_Rooms = 15
var Min_Rooms = 4

var Room_Size = Vector2(23, 23) * 16

var Tunnel_Length = 10 * 16
var Tunnel_Width = 10 * 16
var Tunnel_Thickness = 5

func _ready():	
	randomize()
	generate_dungeon()

func generate_dungeon():
	var initial_room = Room.new(0, 0, Room_Size.x, Room_Size.y)
	Rooms.append(initial_room)
	
	Total_RoomsGenerated += 1
	
	Player.position = initial_room.rect.position + initial_room.rect.size / 2
	
	generate_tunnels(initial_room)
	draw_dungeon()

func generate_tunnels(room, previous_direction = null):
	if Total_RoomsGenerated >= Max_Rooms:
		return
	
	var num_tunnels = randi() % 4 + 1
	
	for i in range(num_tunnels):
		if Total_RoomsGenerated >= Max_Rooms:
			break
		
		var tunnel_dir = Vector2.ZERO
		var new_room_pos = room.rect.position
		
		match i:
			0: tunnel_dir = Vector2(0, -1)
			1: tunnel_dir = Vector2(1, 0)
			2: tunnel_dir = Vector2(0, 1)
			3: tunnel_dir = Vector2(-1, 0)
		
		room.has_tunneldirection.append(tunnel_dir)
		if (previous_direction): room.has_tunneldirection.append(previous_direction)
		
		new_room_pos += tunnel_dir * (Room_Size + Vector2(Tunnel_Length, Tunnel_Width))
		
		var new_room = Room.new(new_room_pos.x, new_room_pos.y, Room_Size.x, Room_Size.y)
		Rooms.append(new_room)
		
		Total_RoomsGenerated += 1
		
		room.tunnels.append([room.rect.position + Room_Size * 0.5, new_room_pos + Room_Size * 0.5])
		
		if Total_RoomsGenerated < Min_Rooms or randi() % 2 == 0:
			generate_tunnels(new_room, -tunnel_dir)

var AllPos_Tiles

func draw_dungeon():
	var cell_size = Vector2(16,16)

	for room in Rooms:
		var start_x = int(room.rect.position.x / cell_size.x)
		var start_y = int(room.rect.position.y / cell_size.y)
		var end_x = start_x + int(room.rect.size.x / cell_size.x)
		var end_y = start_y + int(room.rect.size.y / cell_size.y)
		
		AllPos_Tiles = []
		
		for x in range(start_x, end_x):
			for y in range(start_y, end_y):
				AllPos_Tiles.append(Vector2i(x, y))
		
		Map_TileMap.set_cells_terrain_connect(0, AllPos_Tiles, 0, 0)
		
		AllPos_Tiles = []
		
		for tunnel in room.tunnels:
			var start_pos = Map_TileMap.local_to_map(tunnel[0])
			var end_pos = Map_TileMap.local_to_map(tunnel[1])
			var line = get_line_points(start_pos, end_pos)
			
			for point in line:
				AllPos_Tiles.append(Vector2i(point.x, point.y))
		
		Map_TileMap.set_cells_terrain_connect(0, AllPos_Tiles, 0, 0)

func get_line_points(start, end):
	var points = []
	var diff = end - start
	var steps = max(abs(diff.x), abs(diff.y))
	var perp = Vector2(-diff.y, diff.x).normalized()

	for i in range(steps + 1):
		var t = float(i) / steps
		var x = round(lerp(start.x, end.x, t))
		var y = round(lerp(start.y, end.y, t))
		var center_point = Vector2i(x, y)
		
		for w in range(-floor((Tunnel_Thickness - 1) / 2.0), floor((Tunnel_Thickness - 1) / 2.0) + 1):
			var offset = perp * w
			var offset_int = Vector2i(round(offset.x), round(offset.y))
			
			points.append(center_point + offset_int)
	
	return points

func LockCurrentRoom():
	var CenterOfRoom = CurrentRoom.rect.position + CurrentRoom.rect.size / 2
		
	for EdgeX in range(-1, 2):
		for EdgeY in range(-1, 2):
			var Has_TunnelInThisDirection = false
			
			for tunneldirection in CurrentRoom.has_tunneldirection: 
				if (Vector2(EdgeX, EdgeY) == tunneldirection): 
					Has_TunnelInThisDirection = true
					break
				
			if (EdgeX == EdgeY or (EdgeX != 0 and EdgeY != 0) or !Has_TunnelInThisDirection): continue
			
			for Door_Num in range(-1, Tunnel_Thickness - 3):
				var DoorEdgePos = Vector2(CurrentRoom.rect.size.x / 2 * EdgeX, CurrentRoom.rect.size.y / 2 * EdgeY)
				var Pos_By_DoorNum = Vector2(Door_Num * 16 * EdgeY, Door_Num * 16 * EdgeX)
				
				var InBorderPos = Vector2.ZERO
				
				if (EdgeX == 1): InBorderPos.x = -16
				if (EdgeY == 1): InBorderPos.y = -16
				
				var Door_Pos = CenterOfRoom + DoorEdgePos + Pos_By_DoorNum + InBorderPos
				
				var AtlasCordY
				
				if (EdgeY != 0): AtlasCordY = 0
				else:
					if (EdgeX == 1): AtlasCordY = 1
					elif (EdgeX == -1): AtlasCordY = 2
				
				Doors_TileMap.set_cell(0, Doors_TileMap.local_to_map(Door_Pos), 0, Vector2(2 - Door_Num - 1, AtlasCordY))

func _process(delta):
	var player_pos = Player.position
	
	for room in Rooms:
		var inner_rect = Rect2(room.rect.position + Vector2(16, 16), room.rect.size - Vector2(32, 32))
		
		if inner_rect.has_point(player_pos):
			if (CurrentRoom == null): 
				CurrentRoom = room
			elif room != CurrentRoom:
				CurrentRoom = room
				
				LockCurrentRoom()
			break
"

[sub_resource type="TileSetAtlasSource" id="TileSetAtlasSource_bqd51"]
texture = ExtResource("1_6jrjb")
0:0/0 = 0
0:0/0/terrain_set = 0
0:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:0/0/physics_layer_0/angular_velocity = 0.0
0:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
0:0/0/terrains_peering_bit/bottom_right_corner = 0
1:0/0 = 0
1:0/0/terrain_set = 0
1:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:0/0/physics_layer_0/angular_velocity = 0.0
1:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
1:0/0/terrains_peering_bit/bottom_right_corner = 0
1:0/0/terrains_peering_bit/bottom_side = 0
1:0/0/terrains_peering_bit/bottom_left_corner = 0
2:0/0 = 0
2:0/0/terrain_set = 0
2:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:0/0/physics_layer_0/angular_velocity = 0.0
2:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
2:0/0/terrains_peering_bit/bottom_right_corner = 0
2:0/0/terrains_peering_bit/bottom_side = 0
2:0/0/terrains_peering_bit/bottom_left_corner = 0
3:0/0 = 0
3:0/0/terrain_set = 0
3:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:0/0/physics_layer_0/angular_velocity = 0.0
3:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
3:0/0/terrains_peering_bit/bottom_right_corner = 0
3:0/0/terrains_peering_bit/bottom_side = 0
3:0/0/terrains_peering_bit/bottom_left_corner = 0
4:0/0 = 0
4:0/0/terrain_set = 0
4:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:0/0/physics_layer_0/angular_velocity = 0.0
4:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
4:0/0/terrains_peering_bit/bottom_right_corner = 0
4:0/0/terrains_peering_bit/bottom_side = 0
4:0/0/terrains_peering_bit/bottom_left_corner = 0
5:0/0 = 0
5:0/0/terrain_set = 0
5:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:0/0/physics_layer_0/angular_velocity = 0.0
5:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
5:0/0/terrains_peering_bit/bottom_left_corner = 0
6:0/0 = 0
6:0/0/terrain_set = 0
6:0/0/terrain = 0
6:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:0/0/physics_layer_0/angular_velocity = 0.0
6:0/0/terrains_peering_bit/right_side = 0
6:0/0/terrains_peering_bit/bottom_right_corner = 0
6:0/0/terrains_peering_bit/bottom_side = 0
6:0/0/terrains_peering_bit/bottom_left_corner = 0
6:0/0/terrains_peering_bit/left_side = 0
6:0/0/terrains_peering_bit/top_left_corner = 0
6:0/0/terrains_peering_bit/top_side = 0
6:0/0/terrains_peering_bit/top_right_corner = 0
7:0/0 = 0
7:0/0/terrain_set = 0
7:0/0/terrain = 0
7:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:0/0/physics_layer_0/angular_velocity = 0.0
7:0/0/terrains_peering_bit/right_side = 0
7:0/0/terrains_peering_bit/bottom_right_corner = 0
7:0/0/terrains_peering_bit/bottom_side = 0
7:0/0/terrains_peering_bit/bottom_left_corner = 0
7:0/0/terrains_peering_bit/left_side = 0
7:0/0/terrains_peering_bit/top_left_corner = 0
7:0/0/terrains_peering_bit/top_side = 0
7:0/0/terrains_peering_bit/top_right_corner = 0
8:0/0 = 0
8:0/0/terrain_set = 0
8:0/0/terrain = 0
8:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:0/0/physics_layer_0/angular_velocity = 0.0
8:0/0/terrains_peering_bit/right_side = 0
8:0/0/terrains_peering_bit/bottom_right_corner = 0
8:0/0/terrains_peering_bit/bottom_side = 0
8:0/0/terrains_peering_bit/bottom_left_corner = 0
8:0/0/terrains_peering_bit/left_side = 0
8:0/0/terrains_peering_bit/top_left_corner = 0
8:0/0/terrains_peering_bit/top_side = 0
8:0/0/terrains_peering_bit/top_right_corner = 0
9:0/0 = 0
9:0/0/terrain_set = 0
9:0/0/terrain = 0
9:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
9:0/0/physics_layer_0/angular_velocity = 0.0
9:0/0/terrains_peering_bit/right_side = 0
9:0/0/terrains_peering_bit/bottom_right_corner = 0
9:0/0/terrains_peering_bit/bottom_side = 0
9:0/0/terrains_peering_bit/bottom_left_corner = 0
9:0/0/terrains_peering_bit/left_side = 0
9:0/0/terrains_peering_bit/top_left_corner = 0
9:0/0/terrains_peering_bit/top_side = 0
9:0/0/terrains_peering_bit/top_right_corner = 0
0:1/0 = 0
0:1/0/terrain_set = 0
0:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:1/0/physics_layer_0/angular_velocity = 0.0
0:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
0:1/0/terrains_peering_bit/right_side = 0
0:1/0/terrains_peering_bit/bottom_right_corner = 0
0:1/0/terrains_peering_bit/top_right_corner = 0
1:1/0 = 0
1:1/0/terrain_set = 0
1:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:1/0/physics_layer_0/angular_velocity = 0.0
2:1/0 = 0
2:1/0/terrain_set = 0
2:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:1/0/physics_layer_0/angular_velocity = 0.0
3:1/0 = 0
3:1/0/terrain_set = 0
3:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:1/0/physics_layer_0/angular_velocity = 0.0
4:1/0 = 0
4:1/0/terrain_set = 0
4:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:1/0/physics_layer_0/angular_velocity = 0.0
5:1/0 = 0
5:1/0/terrain_set = 0
5:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:1/0/physics_layer_0/angular_velocity = 0.0
5:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
5:1/0/terrains_peering_bit/bottom_left_corner = 0
5:1/0/terrains_peering_bit/left_side = 0
5:1/0/terrains_peering_bit/top_left_corner = 0
6:1/0 = 0
6:1/0/terrain_set = 0
6:1/0/terrain = 0
6:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:1/0/physics_layer_0/angular_velocity = 0.0
6:1/0/terrains_peering_bit/right_side = 0
6:1/0/terrains_peering_bit/bottom_right_corner = 0
6:1/0/terrains_peering_bit/bottom_side = 0
6:1/0/terrains_peering_bit/bottom_left_corner = 0
6:1/0/terrains_peering_bit/left_side = 0
6:1/0/terrains_peering_bit/top_left_corner = 0
6:1/0/terrains_peering_bit/top_side = 0
6:1/0/terrains_peering_bit/top_right_corner = 0
7:1/0 = 0
7:1/0/terrain_set = 0
7:1/0/terrain = 0
7:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:1/0/physics_layer_0/angular_velocity = 0.0
7:1/0/terrains_peering_bit/right_side = 0
7:1/0/terrains_peering_bit/bottom_right_corner = 0
7:1/0/terrains_peering_bit/bottom_side = 0
7:1/0/terrains_peering_bit/bottom_left_corner = 0
7:1/0/terrains_peering_bit/left_side = 0
7:1/0/terrains_peering_bit/top_left_corner = 0
7:1/0/terrains_peering_bit/top_side = 0
7:1/0/terrains_peering_bit/top_right_corner = 0
8:1/0 = 0
8:1/0/terrain_set = 0
8:1/0/terrain = 0
8:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:1/0/physics_layer_0/angular_velocity = 0.0
8:1/0/terrains_peering_bit/right_side = 0
8:1/0/terrains_peering_bit/bottom_right_corner = 0
8:1/0/terrains_peering_bit/bottom_side = 0
8:1/0/terrains_peering_bit/bottom_left_corner = 0
8:1/0/terrains_peering_bit/left_side = 0
8:1/0/terrains_peering_bit/top_left_corner = 0
8:1/0/terrains_peering_bit/top_side = 0
8:1/0/terrains_peering_bit/top_right_corner = 0
9:1/0 = 0
9:1/0/terrain_set = 0
9:1/0/terrain = 0
9:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
9:1/0/physics_layer_0/angular_velocity = 0.0
9:1/0/terrains_peering_bit/right_side = 0
9:1/0/terrains_peering_bit/bottom_right_corner = 0
9:1/0/terrains_peering_bit/bottom_side = 0
9:1/0/terrains_peering_bit/bottom_left_corner = 0
9:1/0/terrains_peering_bit/left_side = 0
9:1/0/terrains_peering_bit/top_left_corner = 0
9:1/0/terrains_peering_bit/top_side = 0
9:1/0/terrains_peering_bit/top_right_corner = 0
0:2/0 = 0
0:2/0/terrain_set = 0
0:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:2/0/physics_layer_0/angular_velocity = 0.0
0:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
0:2/0/terrains_peering_bit/right_side = 0
0:2/0/terrains_peering_bit/bottom_right_corner = 0
0:2/0/terrains_peering_bit/top_right_corner = 0
1:2/0 = 0
1:2/0/terrain_set = 0
1:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:2/0/physics_layer_0/angular_velocity = 0.0
2:2/0 = 0
2:2/0/terrain_set = 0
2:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:2/0/physics_layer_0/angular_velocity = 0.0
3:2/0 = 0
3:2/0/terrain_set = 0
3:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:2/0/physics_layer_0/angular_velocity = 0.0
4:2/0 = 0
4:2/0/terrain_set = 0
4:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:2/0/physics_layer_0/angular_velocity = 0.0
5:2/0 = 0
5:2/0/terrain_set = 0
5:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:2/0/physics_layer_0/angular_velocity = 0.0
5:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
5:2/0/terrains_peering_bit/bottom_left_corner = 0
5:2/0/terrains_peering_bit/left_side = 0
5:2/0/terrains_peering_bit/top_left_corner = 0
6:2/0 = 0
6:2/0/terrain_set = 0
6:2/0/terrain = 0
6:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:2/0/physics_layer_0/angular_velocity = 0.0
6:2/0/terrains_peering_bit/right_side = 0
6:2/0/terrains_peering_bit/bottom_right_corner = 0
6:2/0/terrains_peering_bit/bottom_side = 0
6:2/0/terrains_peering_bit/bottom_left_corner = 0
6:2/0/terrains_peering_bit/left_side = 0
6:2/0/terrains_peering_bit/top_left_corner = 0
6:2/0/terrains_peering_bit/top_side = 0
6:2/0/terrains_peering_bit/top_right_corner = 0
7:2/0 = 0
7:2/0/terrain_set = 0
7:2/0/terrain = 0
7:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:2/0/physics_layer_0/angular_velocity = 0.0
7:2/0/terrains_peering_bit/right_side = 0
7:2/0/terrains_peering_bit/bottom_right_corner = 0
7:2/0/terrains_peering_bit/bottom_side = 0
7:2/0/terrains_peering_bit/bottom_left_corner = 0
7:2/0/terrains_peering_bit/left_side = 0
7:2/0/terrains_peering_bit/top_left_corner = 0
7:2/0/terrains_peering_bit/top_side = 0
7:2/0/terrains_peering_bit/top_right_corner = 0
8:2/0 = 0
8:2/0/terrain_set = 0
8:2/0/terrain = 0
8:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:2/0/physics_layer_0/angular_velocity = 0.0
8:2/0/terrains_peering_bit/right_side = 0
8:2/0/terrains_peering_bit/bottom_right_corner = 0
8:2/0/terrains_peering_bit/bottom_side = 0
8:2/0/terrains_peering_bit/bottom_left_corner = 0
8:2/0/terrains_peering_bit/left_side = 0
8:2/0/terrains_peering_bit/top_left_corner = 0
8:2/0/terrains_peering_bit/top_side = 0
8:2/0/terrains_peering_bit/top_right_corner = 0
9:2/0 = 0
9:2/0/terrain_set = 0
9:2/0/terrain = 0
9:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
9:2/0/physics_layer_0/angular_velocity = 0.0
9:2/0/terrains_peering_bit/right_side = 0
9:2/0/terrains_peering_bit/bottom_right_corner = 0
9:2/0/terrains_peering_bit/bottom_side = 0
9:2/0/terrains_peering_bit/bottom_left_corner = 0
9:2/0/terrains_peering_bit/left_side = 0
9:2/0/terrains_peering_bit/top_left_corner = 0
9:2/0/terrains_peering_bit/top_side = 0
9:2/0/terrains_peering_bit/top_right_corner = 0
0:3/0 = 0
0:3/0/terrain_set = 0
0:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:3/0/physics_layer_0/angular_velocity = 0.0
0:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
0:3/0/terrains_peering_bit/right_side = 0
0:3/0/terrains_peering_bit/bottom_right_corner = 0
0:3/0/terrains_peering_bit/top_right_corner = 0
1:3/0 = 0
1:3/0/terrain_set = 0
1:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:3/0/physics_layer_0/angular_velocity = 0.0
2:3/0 = 0
2:3/0/terrain_set = 0
2:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:3/0/physics_layer_0/angular_velocity = 0.0
3:3/0 = 0
3:3/0/terrain_set = 0
3:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:3/0/physics_layer_0/angular_velocity = 0.0
4:3/0 = 0
4:3/0/terrain_set = 0
4:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:3/0/physics_layer_0/angular_velocity = 0.0
5:3/0 = 0
5:3/0/terrain_set = 0
5:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:3/0/physics_layer_0/angular_velocity = 0.0
5:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
5:3/0/terrains_peering_bit/bottom_left_corner = 0
5:3/0/terrains_peering_bit/left_side = 0
5:3/0/terrains_peering_bit/top_left_corner = 0
6:3/0 = 0
6:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:3/0/physics_layer_0/angular_velocity = 0.0
7:3/0 = 0
7:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:3/0/physics_layer_0/angular_velocity = 0.0
8:3/0 = 0
8:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:3/0/physics_layer_0/angular_velocity = 0.0
9:3/0 = 0
9:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
9:3/0/physics_layer_0/angular_velocity = 0.0
0:4/0 = 0
0:4/0/terrain_set = 0
0:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:4/0/physics_layer_0/angular_velocity = 0.0
0:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
0:4/0/terrains_peering_bit/top_right_corner = 0
1:4/0 = 0
1:4/0/terrain_set = 0
1:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:4/0/physics_layer_0/angular_velocity = 0.0
1:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
1:4/0/terrains_peering_bit/top_left_corner = 0
1:4/0/terrains_peering_bit/top_side = 0
1:4/0/terrains_peering_bit/top_right_corner = 0
2:4/0 = 0
2:4/0/terrain_set = 0
2:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:4/0/physics_layer_0/angular_velocity = 0.0
2:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
2:4/0/terrains_peering_bit/top_left_corner = 0
2:4/0/terrains_peering_bit/top_side = 0
2:4/0/terrains_peering_bit/top_right_corner = 0
3:4/0 = 0
3:4/0/terrain_set = 0
3:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:4/0/physics_layer_0/angular_velocity = 0.0
3:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
3:4/0/terrains_peering_bit/top_left_corner = 0
3:4/0/terrains_peering_bit/top_side = 0
3:4/0/terrains_peering_bit/top_right_corner = 0
4:4/0 = 0
4:4/0/terrain_set = 0
4:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:4/0/physics_layer_0/angular_velocity = 0.0
4:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
4:4/0/terrains_peering_bit/top_left_corner = 0
4:4/0/terrains_peering_bit/top_side = 0
4:4/0/terrains_peering_bit/top_right_corner = 0
5:4/0 = 0
5:4/0/terrain_set = 0
5:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:4/0/physics_layer_0/angular_velocity = 0.0
5:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
5:4/0/terrains_peering_bit/top_left_corner = 0
6:4/0 = 0
6:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:4/0/physics_layer_0/angular_velocity = 0.0
7:4/0 = 0
7:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:4/0/physics_layer_0/angular_velocity = 0.0
8:4/0 = 0
8:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:4/0/physics_layer_0/angular_velocity = 0.0
9:4/0 = 0
9:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
9:4/0/physics_layer_0/angular_velocity = 0.0
0:5/0 = 0
0:5/0/terrain_set = 0
0:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:5/0/physics_layer_0/angular_velocity = 0.0
0:5/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
0:5/0/terrains_peering_bit/bottom_left_corner = 0
0:5/0/terrains_peering_bit/left_side = 0
0:5/0/terrains_peering_bit/top_left_corner = 0
0:5/0/terrains_peering_bit/top_side = 0
0:5/0/terrains_peering_bit/top_right_corner = 0
1:5/0 = 0
1:5/0/terrain_set = 0
1:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:5/0/physics_layer_0/angular_velocity = 0.0
1:5/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
2:5/0 = 0
2:5/0/terrain_set = 0
2:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:5/0/physics_layer_0/angular_velocity = 0.0
2:5/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
3:5/0 = 0
3:5/0/terrain_set = 0
3:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:5/0/physics_layer_0/angular_velocity = 0.0
3:5/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
3:5/0/terrains_peering_bit/right_side = 0
3:5/0/terrains_peering_bit/bottom_right_corner = 0
3:5/0/terrains_peering_bit/top_left_corner = 0
3:5/0/terrains_peering_bit/top_side = 0
3:5/0/terrains_peering_bit/top_right_corner = 0
4:5/0 = 0
4:5/0/terrain_set = 0
4:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:5/0/physics_layer_0/angular_velocity = 0.0
5:5/0 = 0
5:5/0/terrain_set = 0
5:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:5/0/physics_layer_0/angular_velocity = 0.0
6:5/0 = 0
6:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:5/0/physics_layer_0/angular_velocity = 0.0
7:5/0 = 0
7:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:5/0/physics_layer_0/angular_velocity = 0.0
8:5/0 = 0
8:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:5/0/physics_layer_0/angular_velocity = 0.0
9:5/0 = 0
9:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
9:5/0/physics_layer_0/angular_velocity = 0.0
0:6/0 = 0
0:6/0/terrain_set = 0
0:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:6/0/physics_layer_0/angular_velocity = 0.0
0:6/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
0:6/0/terrains_peering_bit/bottom_right_corner = 0
0:6/0/terrains_peering_bit/bottom_side = 0
0:6/0/terrains_peering_bit/bottom_left_corner = 0
0:6/0/terrains_peering_bit/left_side = 0
0:6/0/terrains_peering_bit/top_left_corner = 0
1:6/0 = 0
1:6/0/terrain_set = 0
1:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:6/0/physics_layer_0/angular_velocity = 0.0
1:6/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
2:6/0 = 0
2:6/0/terrain_set = 0
2:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:6/0/physics_layer_0/angular_velocity = 0.0
2:6/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
3:6/0 = 0
3:6/0/terrain_set = 0
3:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:6/0/physics_layer_0/angular_velocity = 0.0
3:6/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
3:6/0/terrains_peering_bit/right_side = 0
3:6/0/terrains_peering_bit/bottom_right_corner = 0
3:6/0/terrains_peering_bit/bottom_side = 0
3:6/0/terrains_peering_bit/bottom_left_corner = 0
3:6/0/terrains_peering_bit/top_right_corner = 0
4:6/0 = 0
4:6/0/terrain_set = 0
4:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:6/0/physics_layer_0/angular_velocity = 0.0
5:6/0 = 0
5:6/0/terrain_set = 0
5:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:6/0/physics_layer_0/angular_velocity = 0.0
6:6/0 = 0
6:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:6/0/physics_layer_0/angular_velocity = 0.0
7:6/0 = 0
7:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:6/0/physics_layer_0/angular_velocity = 0.0
8:6/0 = 0
8:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:6/0/physics_layer_0/angular_velocity = 0.0
9:6/0 = 0
9:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
9:6/0/physics_layer_0/angular_velocity = 0.0
0:7/0 = 0
0:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:7/0/physics_layer_0/angular_velocity = 0.0
1:7/0 = 0
1:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:7/0/physics_layer_0/angular_velocity = 0.0
2:7/0 = 0
2:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:7/0/physics_layer_0/angular_velocity = 0.0
3:7/0 = 0
3:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:7/0/physics_layer_0/angular_velocity = 0.0
4:7/0 = 0
4:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:7/0/physics_layer_0/angular_velocity = 0.0
5:7/0 = 0
5:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:7/0/physics_layer_0/angular_velocity = 0.0
6:7/0 = 0
6:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:7/0/physics_layer_0/angular_velocity = 0.0
7:7/0 = 0
7:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:7/0/physics_layer_0/angular_velocity = 0.0
8:7/0 = 0
8:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:7/0/physics_layer_0/angular_velocity = 0.0
9:7/0 = 0
9:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
9:7/0/physics_layer_0/angular_velocity = 0.0
0:8/0 = 0
0:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:8/0/physics_layer_0/angular_velocity = 0.0
1:8/0 = 0
1:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:8/0/physics_layer_0/angular_velocity = 0.0
2:8/0 = 0
2:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:8/0/physics_layer_0/angular_velocity = 0.0
3:8/0 = 0
3:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:8/0/physics_layer_0/angular_velocity = 0.0
4:8/0 = 0
4:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:8/0/physics_layer_0/angular_velocity = 0.0
5:8/0 = 0
5:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:8/0/physics_layer_0/angular_velocity = 0.0
6:8/0 = 0
6:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:8/0/physics_layer_0/angular_velocity = 0.0
7:8/0 = 0
7:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:8/0/physics_layer_0/angular_velocity = 0.0
8:8/0 = 0
8:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:8/0/physics_layer_0/angular_velocity = 0.0
9:8/0 = 0
9:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
9:8/0/physics_layer_0/angular_velocity = 0.0
0:9/0 = 0
0:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:9/0/physics_layer_0/angular_velocity = 0.0
1:9/0 = 0
1:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:9/0/physics_layer_0/angular_velocity = 0.0
2:9/0 = 0
2:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:9/0/physics_layer_0/angular_velocity = 0.0
3:9/0 = 0
3:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:9/0/physics_layer_0/angular_velocity = 0.0
4:9/0 = 0
4:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:9/0/physics_layer_0/angular_velocity = 0.0
5:9/0 = 0
5:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:9/0/physics_layer_0/angular_velocity = 0.0
6:9/0 = 0
6:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:9/0/physics_layer_0/angular_velocity = 0.0
7:9/0 = 0
7:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:9/0/physics_layer_0/angular_velocity = 0.0
8:9/0 = 0
8:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:9/0/physics_layer_0/angular_velocity = 0.0
9:9/0 = 0
9:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
9:9/0/physics_layer_0/angular_velocity = 0.0

[sub_resource type="TileSet" id="TileSet_i15hr"]
physics_layer_0/collision_layer = 1
physics_layer_0/collision_mask = 2
terrain_set_0/mode = 0
terrain_set_0/terrain_0/name = "Room"
terrain_set_0/terrain_0/color = Color(0.286275, 0.188235, 0.12549, 1)
sources/0 = SubResource("TileSetAtlasSource_bqd51")

[sub_resource type="TileSetAtlasSource" id="TileSetAtlasSource_bpttf"]
texture = ExtResource("2_ivbv3")
0:0/0 = 0
0:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:0/0/physics_layer_0/angular_velocity = 0.0
0:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
1:0/0 = 0
1:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:0/0/physics_layer_0/angular_velocity = 0.0
1:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
2:0/0 = 0
2:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:0/0/physics_layer_0/angular_velocity = 0.0
2:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
0:1/0 = 0
0:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:1/0/physics_layer_0/angular_velocity = 0.0
0:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, -2.28571, -8, -2, 8, -8, 8)
1:1/0 = 0
1:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:1/0/physics_layer_0/angular_velocity = 0.0
1:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, -2, -8, -2, 8, -8, 8)
2:1/0 = 0
2:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:1/0/physics_layer_0/angular_velocity = 0.0
2:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, -2, -8, -2, 8, -8, 8)
0:2/0 = 0
0:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:2/0/physics_layer_0/angular_velocity = 0.0
0:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(2, -8, 8, -8, 8, 8, 2, 8)
1:2/0 = 0
1:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:2/0/physics_layer_0/angular_velocity = 0.0
1:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(2, -8, 8, -8, 8, 8, 2, 8)
2:2/0 = 0
2:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:2/0/physics_layer_0/angular_velocity = 0.0
2:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(2, -8, 8, -8, 8, 8, 2, 8)
0:3/0 = 0
0:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:3/0/physics_layer_0/angular_velocity = 0.0
0:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-3, -8, 3, -8, 3, 8, -3, 8)
1:3/0 = 0
1:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:3/0/physics_layer_0/angular_velocity = 0.0
1:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-3, -8, 3, -8, 3, 8, -3, 8)
2:3/0 = 0
2:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:3/0/physics_layer_0/angular_velocity = 0.0
2:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-3, -8, 3, -8, 3, 8, -3, 8)

[sub_resource type="TileSet" id="TileSet_lg7q6"]
physics_layer_0/collision_layer = 1
physics_layer_0/collision_mask = 2
sources/0 = SubResource("TileSetAtlasSource_bpttf")

[node name="MainGame" type="Node2D"]
script = SubResource("GDScript_suuod")

[node name="Map" type="TileMap" parent="."]
tile_set = SubResource("TileSet_i15hr")
format = 2
layer_0/name = "Wall_and_Floors"

[node name="Doors" type="TileMap" parent="."]
tile_set = SubResource("TileSet_lg7q6")
format = 2

[node name="Speaks" type="Node2D" parent="."]

[node name="Player" parent="." instance=ExtResource("1_dlx83")]
